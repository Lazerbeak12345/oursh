var searchIndex = JSON.parse('{\
"oursh":{"doc":"Documentation Build Status Dependencies Gitter Chat","t":[14,0,0,0,12,12,3,6,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,6,8,16,4,13,6,8,13,6,8,13,0,11,11,10,11,11,11,11,5,10,5,5,5,0,10,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,12,12,12,12,13,13,3,13,4,13,13,4,13,13,13,13,13,3,13,13,4,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,8,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,6,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,0,0,0,0,5,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,12,12,11,12,12,11,11,11,11,11,11,13,4,13,13,11,11,5,5,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["debug","process","program","repl","0","0","IO","Jobs","Process","ProcessGroup","Signal","Thread","Wait","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","fmt","fmt","fmt","fork","fork_and_wait","from","from","from","from","from","into","into","into","into","into","leader","leader_mut","new","pid","retain_alive_jobs","status","status","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wait","wait","AlternateProgram","Command","Command","Error","Parse","PrimaryProgram","Program","Read","Result","Run","Runtime","basic","borrow","borrow_mut","commands","fmt","from","into","name","parse","parse","parse_alternate","parse_and_run","parse_primary","posix","run","try_from","try_into","type_id","Command","Program","borrow","borrow","borrow_mut","borrow_mut","commands","fmt","fmt","from","from","into","into","parse","run","run","try_from","try_from","try_into","try_into","type_id","type_id","ast","builtin","lex","parse","0","0","0","1","Alternate","And","Assignment","Background","Command","Compound","HashLang","Interpreter","Lang","Not","Or","Pipeline","Primary","Program","RW","Read","Redirect","Shebang","Simple","Subshell","Word","Write","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commands","fd","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","insert","into","into","into","into","into","into","parse","push","run","run","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","append","clobber","duplicate","duplicate","filename","filename","filename","n","n","n","Builtin","Cd","Exit","Jobs","Null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","run","run","run","run","run","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Amper","And","Backslash","Backtick","Bang","Case","Clobber","DGreat","DLess","DLessDash","Do","Dollar","Done","DoubleQuote","Elif","Else","Equals","Error","Esac","Fi","For","Great","GreatAnd","HashLang","If","IoNumber","LBrace","LParen","Less","LessAnd","LessGreat","Lexer","Linefeed","Or","Pipe","RBrace","RParen","Semi","Shebang","SingleQuote","Space","Span","Tab","Text","Then","Token","UnrecognizedChar","Until","While","Word","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","from","into","into","into","into_iter","ne","new","next","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CommandParser","ProgramParser","__ToTriple","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","new","parse","parse","to_triple","try_from","try_from","try_into","try_into","type_id","type_id","action","completion","history","prompt","start","Action","ActionContext","args","backspace","borrow","borrow","borrow_mut","borrow_mut","clear","complete","end","enter","eof","from","from","history","history_down","history_up","home","insert","interrupt","into","into","io","jobs","left","prompt","prompt_length","right","stdout","text","try_from","try_from","try_into","try_into","type_id","type_id","Complete","Completion","None","Partial","borrow","borrow_mut","complete","executable_completions","first","fmt","from","into","is_complete","path_complete","possibilities","try_from","try_into","type_id","History","add","borrow","borrow_mut","fmt","from","get_down","get_up","into","load","reset_index","save","try_from","try_into","type_id","Prompt","borrow","borrow_mut","default","display","from","into","long_style","new","nixpulvis_style","sh_style","short_style","try_from","try_into","type_id"],"q":["oursh","","","","oursh::process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oursh::program","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oursh::program::basic","","","","","","","","","","","","","","","","","","","","","","oursh::program::posix","","","","oursh::program::posix::ast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oursh::program::posix::ast::Redirect","","","","","","","","","","oursh::program::posix::builtin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oursh::program::posix::lex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oursh::program::posix::parse","","","","","","","","","","","","","","","","","","","","","","oursh::repl","","","","","oursh::repl::action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oursh::repl::completion","","","","","","","","","","","","","","","","","","oursh::repl::history","","","","","","","","","","","","","","","oursh::repl::prompt","","","","","","","","","","","","","",""],"d":["Print debug information to stderr.","Subprocess execution management.","Parsing and handling program syntax(es) of the shell.","Quick and effective raw mode repl library for ANSI …","","","File descriptors for use in processes and threads","Shared job handling structure","A process to be executed by various means","Processes groups are used for things like pipelines and …","TODO: What signal handling can we put here?","Threads are distinguished by a thread ID (TID)","","","","","","","","","","","","","","","","","","","Run a shell job in the background.","Run a shell job, waiting for the command to finish.","","","","","","","","","","","","","Create a new job from the given command.","","Enumerate the given jobs, pruning exited, signaled or …","","","","","","","","","","","","","","","","","","","","","TODO: alt explain","A command is a task given by the user as part of a <code>Program</code>…","The type of each of this program’s commands.","A comprehensive error type for the operation of programs.","An error within the lexer or parser.","The primary program type, used for unannotated blocks.","A program is as large as a file or as small as a line.","A general issue reading the program.","Convenience type for results with program errors.","","An error encountered during the evaluation of a program.","Single command programs with no features.","","","Return a list of all the commands in this program.","","","","Return the name of this command.","Parse a program of the given type.","Parse a whole program from the given <code>reader</code>.","Parse a program of the alternate type.","","Parse a program of the primary type.","The shell language (often called <code>sh</code>) at the heart of the …","","","","","A single poorly parsed command.","A basic program with only a single command.","","","","","Return the single parsed command.","","","","","","","Create a new program from the given reader.","","","","","","","","","Abstract Syntax Tree for the POSIX language.","Commands that are run from the shell directly, without …","Custom LALRPOP lexer for tokenizing the input stream.","LALRPOP generated parser module.","","","","","","Perform the first command, conditionally running the next …","","Run a command in the background.","A command is a <em>highly</em> mutually-recursive node with the …","A full program embedded in a compound command.","","Either explicit or implicit declaration of the …","Run a program through another parser/interpreter.","Performs boolean negation to the status code of the inner …","Perform the first command, conditionally running the next …","Run a command’s output through to the input of another.","","A program is the result of parsing a sequence of commands.","","","","","Just a single command, with it’s arguments.","Run the inner <strong>program</strong> in a sub-shell environment.","A parsed word, already having gone through expansion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A builtin is a custom shell command, often changing the …","Change directory (<code>cd</code>) builtin.","Exit builtin, alternative to ctrl-d.","Background job information.","Noop builtin, same idea as <code>true</code>.","","","","","","","","","","","","","","","","","Execute the shell builtin command, returning a retult of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A lexer error.","","","","","","","","","","","","","","A lexer to feed the parser gernerated by LALRPOP.","","","","","","","","","","A result type wrapping a token with start and end …","","","","Every token in the langauge, these are the terminals of …","","","","","","","","","","","","","","","","","","","","","","","","Create a new lexer from an input &amp;str.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actions to be bound to input methods.","User text completion for REPL interations.","Keeps a record of previous commands, used for completion …","","Start a REPL over the strings the user provides.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single complete value.","The result of a query for text completion.","Nothing completes the user text.","The user text could match multiple complete values.","","","Return a completed (valid) program text from the partial …","Return a list of the matches from the given partial …","Return the first (lexicographically) option if there are …","","","","Returns true if this completion is a single option.","Complete a path at the end of the given string.","Return a list of all the possibile complete matches.","","","","The history of a user’s provided commands.","","","","","","","","","","","","","","","A status prompt to be displayed in interactive sessions …","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,0,0,0,0,0,0,0,3,4,5,1,3,2,4,5,1,3,2,1,1,1,1,3,2,3,3,4,5,1,3,2,4,5,1,3,2,2,2,3,3,0,6,3,1,4,5,1,3,2,4,5,1,3,2,4,5,1,3,2,6,3,0,0,7,0,8,0,0,8,0,0,8,0,8,8,7,8,8,8,9,0,7,0,0,0,0,10,8,8,8,0,0,11,12,11,12,11,11,12,11,12,11,12,11,11,12,11,12,11,12,11,12,0,0,0,0,13,14,15,15,16,17,0,17,0,17,16,0,17,17,17,17,16,0,18,18,0,16,17,17,0,18,13,17,14,18,15,16,13,17,14,18,15,16,13,17,14,18,15,16,13,17,14,18,15,16,13,18,13,17,14,18,15,16,13,17,14,18,15,16,17,13,17,14,18,15,16,13,17,13,17,13,17,14,18,15,16,13,17,14,18,15,16,13,17,14,18,15,16,13,17,14,18,15,16,19,19,20,19,21,20,19,21,20,19,0,0,0,0,0,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,26,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,0,27,27,27,0,28,27,27,27,29,28,27,29,28,27,27,27,27,28,27,29,28,27,29,28,27,29,27,29,29,27,29,28,27,29,28,27,29,28,27,0,0,0,30,31,30,31,30,31,30,31,30,31,30,31,32,30,31,30,31,30,31,0,0,0,0,0,0,0,33,34,34,33,34,33,34,34,34,34,34,34,33,33,34,34,34,34,34,34,33,33,33,34,33,33,34,33,33,34,33,34,33,34,33,35,0,35,35,35,35,0,0,35,35,35,35,35,0,35,35,35,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["io",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["io",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[["io",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["process",3]],[[],["process",3]],[[["vec",3,["cstring"]],["cstring",3]]],[[],["pid",3]],[[["jobs",6]]],[[],[["waitstatus",4],["result",6,["waitstatus"]]]],[[],[["waitstatus",4],["result",6,["waitstatus"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["waitstatus",4],["result",6,["waitstatus"]]]],[[],[["waitstatus",4],["result",6,["waitstatus"]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["cstring",3]],[[["bufread",8]],[["result",6],["program",8]]],[[["bufread",8]],["result",6]],[[["bufread",8]],[["result",6,["alternateprogram"]],["alternateprogram",6]]],[[["argvmap",3],["io",3],["jobs",6],["str",15]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[["bufread",8]],[["primaryprogram",6],["result",6,["primaryprogram"]]]],null,[[["jobs",6],["io",3],["bool",15]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["bufread",8]],["result",6]],[[["io",3],["rc",3],["bool",15]],[["waitstatus",4],["error",4],["result",4,["waitstatus","error"]]]],[[["jobs",6],["io",3],["bool",15]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["program",3]],[[],["command",4]],[[],["word",3]],[[],["redirect",4]],[[],["assignment",3]],[[],["interpreter",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rawfd",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["command",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bufread",8]],["result",6]],[[["command",4]]],[[["io",3],["rc",3],["bool",15]],[["waitstatus",4],["error",4],["result",4,["waitstatus","error"]]]],[[["jobs",6],["io",3],["bool",15]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["jobsref",6],["vec",3,["cstring"]],["cstring",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[["jobsref",6],["vec",3,["cstring"]],["cstring",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[["jobsref",6],["vec",3,["cstring"]],["cstring",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[["jobsref",6],["vec",3,["cstring"]],["cstring",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[["jobsref",6],["vec",3,["cstring"]],["cstring",3]],[["waitstatus",4],["result",6,["waitstatus"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["token",4]],[[]],[[["token",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["token",4]],["bool",15]],[[["str",15]]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["commandparser",3]],[[],["programparser",3]],[[["intoiterator",8],["str",15]],[["result",4,["command","parseerror"]],["command",4],["parseerror",4,["usize","token","error"]]]],[[["intoiterator",8],["str",15]],[["program",3],["result",4,["program","parseerror"]],["parseerror",4,["usize","token","error"]]]],[[],[["parseerror",4,["usize","token","error"]],["result",4,["parseerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[["stdin",3],["stdout",3],["jobs",6],["prompt",3],["io",3],["argvmap",3]]],null,null,null,[[["actioncontext",3]]],[[]],[[]],[[]],[[]],[[["actioncontext",3]]],[[["actioncontext",3]]],[[["actioncontext",3]]],[[["actioncontext",3]]],[[["actioncontext",3]]],[[]],[[]],null,[[["actioncontext",3]]],[[["actioncontext",3]]],[[["actioncontext",3]]],[[["char",15],["actioncontext",3]]],[[["actioncontext",3]]],[[]],[[]],null,null,[[["actioncontext",3]]],null,null,[[["actioncontext",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[["str",15]],["completion",4]],[[["str",15]],["completion",4]],[[],["string",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[["str",15]],["completion",4]],[[],[["vec",3,["string"]],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["usize",15],["str",15]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[],[["option",4,["string"]],["string",3]]],[[],[["option",4,["string"]],["string",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"IO"],[3,"ProcessGroup"],[3,"Process"],[3,"Thread"],[3,"Signal"],[8,"Wait"],[8,"Program"],[4,"Error"],[8,"Command"],[8,"Run"],[3,"Program"],[3,"Command"],[3,"Program"],[3,"Word"],[3,"Assignment"],[4,"Interpreter"],[4,"Command"],[4,"Redirect"],[13,"Write"],[13,"Read"],[13,"RW"],[3,"Exit"],[3,"Cd"],[3,"Null"],[3,"Jobs"],[8,"Builtin"],[4,"Token"],[4,"Error"],[3,"Lexer"],[3,"CommandParser"],[3,"ProgramParser"],[8,"__ToTriple"],[3,"ActionContext"],[3,"Action"],[4,"Completion"],[3,"History"],[3,"Prompt"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};